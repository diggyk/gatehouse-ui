// source: policies.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.policies.AddPolicyRequest', null, global);
goog.exportSymbol('proto.policies.DECIDE', null, global);
goog.exportSymbol('proto.policies.EntityCheck', null, global);
goog.exportSymbol('proto.policies.GetPoliciesRequest', null, global);
goog.exportSymbol('proto.policies.KvCheck', null, global);
goog.exportSymbol('proto.policies.ModifyPolicyRequest', null, global);
goog.exportSymbol('proto.policies.MultiPolicyResponse', null, global);
goog.exportSymbol('proto.policies.NUM', null, global);
goog.exportSymbol('proto.policies.NumberCheck', null, global);
goog.exportSymbol('proto.policies.PolicyResponse', null, global);
goog.exportSymbol('proto.policies.PolicyRule', null, global);
goog.exportSymbol('proto.policies.RemovePolicyRequest', null, global);
goog.exportSymbol('proto.policies.SET', null, global);
goog.exportSymbol('proto.policies.StringCheck', null, global);
goog.exportSymbol('proto.policies.TargetCheck', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policies.StringCheck = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.policies.StringCheck.repeatedFields_, null);
};
goog.inherits(proto.policies.StringCheck, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policies.StringCheck.displayName = 'proto.policies.StringCheck';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policies.KvCheck = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.policies.KvCheck.repeatedFields_, null);
};
goog.inherits(proto.policies.KvCheck, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policies.KvCheck.displayName = 'proto.policies.KvCheck';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policies.NumberCheck = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policies.NumberCheck, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policies.NumberCheck.displayName = 'proto.policies.NumberCheck';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policies.EntityCheck = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.policies.EntityCheck.repeatedFields_, null);
};
goog.inherits(proto.policies.EntityCheck, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policies.EntityCheck.displayName = 'proto.policies.EntityCheck';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policies.TargetCheck = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.policies.TargetCheck.repeatedFields_, null);
};
goog.inherits(proto.policies.TargetCheck, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policies.TargetCheck.displayName = 'proto.policies.TargetCheck';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policies.PolicyRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.policies.PolicyRule.repeatedFields_, null);
};
goog.inherits(proto.policies.PolicyRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policies.PolicyRule.displayName = 'proto.policies.PolicyRule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policies.AddPolicyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policies.AddPolicyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policies.AddPolicyRequest.displayName = 'proto.policies.AddPolicyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policies.ModifyPolicyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policies.ModifyPolicyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policies.ModifyPolicyRequest.displayName = 'proto.policies.ModifyPolicyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policies.RemovePolicyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policies.RemovePolicyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policies.RemovePolicyRequest.displayName = 'proto.policies.RemovePolicyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policies.GetPoliciesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policies.GetPoliciesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policies.GetPoliciesRequest.displayName = 'proto.policies.GetPoliciesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policies.PolicyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policies.PolicyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policies.PolicyResponse.displayName = 'proto.policies.PolicyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policies.MultiPolicyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.policies.MultiPolicyResponse.repeatedFields_, null);
};
goog.inherits(proto.policies.MultiPolicyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policies.MultiPolicyResponse.displayName = 'proto.policies.MultiPolicyResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.policies.StringCheck.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policies.StringCheck.prototype.toObject = function(opt_includeInstance) {
  return proto.policies.StringCheck.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policies.StringCheck} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.StringCheck.toObject = function(includeInstance, msg) {
  var f, obj = {
    valCmp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    valsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policies.StringCheck}
 */
proto.policies.StringCheck.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policies.StringCheck;
  return proto.policies.StringCheck.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policies.StringCheck} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policies.StringCheck}
 */
proto.policies.StringCheck.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.policies.SET} */ (reader.readEnum());
      msg.setValCmp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addVals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policies.StringCheck.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policies.StringCheck.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policies.StringCheck} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.StringCheck.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValCmp();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional SET val_cmp = 1;
 * @return {!proto.policies.SET}
 */
proto.policies.StringCheck.prototype.getValCmp = function() {
  return /** @type {!proto.policies.SET} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.policies.SET} value
 * @return {!proto.policies.StringCheck} returns this
 */
proto.policies.StringCheck.prototype.setValCmp = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated string vals = 2;
 * @return {!Array<string>}
 */
proto.policies.StringCheck.prototype.getValsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.policies.StringCheck} returns this
 */
proto.policies.StringCheck.prototype.setValsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.policies.StringCheck} returns this
 */
proto.policies.StringCheck.prototype.addVals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.policies.StringCheck} returns this
 */
proto.policies.StringCheck.prototype.clearValsList = function() {
  return this.setValsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.policies.KvCheck.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policies.KvCheck.prototype.toObject = function(opt_includeInstance) {
  return proto.policies.KvCheck.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policies.KvCheck} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.KvCheck.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    op: jspb.Message.getFieldWithDefault(msg, 2, 0),
    valsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policies.KvCheck}
 */
proto.policies.KvCheck.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policies.KvCheck;
  return proto.policies.KvCheck.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policies.KvCheck} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policies.KvCheck}
 */
proto.policies.KvCheck.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.policies.SET} */ (reader.readEnum());
      msg.setOp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addVals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policies.KvCheck.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policies.KvCheck.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policies.KvCheck} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.KvCheck.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOp();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getValsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.policies.KvCheck.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.policies.KvCheck} returns this
 */
proto.policies.KvCheck.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SET op = 2;
 * @return {!proto.policies.SET}
 */
proto.policies.KvCheck.prototype.getOp = function() {
  return /** @type {!proto.policies.SET} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.policies.SET} value
 * @return {!proto.policies.KvCheck} returns this
 */
proto.policies.KvCheck.prototype.setOp = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated string vals = 3;
 * @return {!Array<string>}
 */
proto.policies.KvCheck.prototype.getValsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.policies.KvCheck} returns this
 */
proto.policies.KvCheck.prototype.setValsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.policies.KvCheck} returns this
 */
proto.policies.KvCheck.prototype.addVals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.policies.KvCheck} returns this
 */
proto.policies.KvCheck.prototype.clearValsList = function() {
  return this.setValsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policies.NumberCheck.prototype.toObject = function(opt_includeInstance) {
  return proto.policies.NumberCheck.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policies.NumberCheck} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.NumberCheck.toObject = function(includeInstance, msg) {
  var f, obj = {
    op: jspb.Message.getFieldWithDefault(msg, 1, 0),
    val: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policies.NumberCheck}
 */
proto.policies.NumberCheck.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policies.NumberCheck;
  return proto.policies.NumberCheck.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policies.NumberCheck} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policies.NumberCheck}
 */
proto.policies.NumberCheck.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.policies.NUM} */ (reader.readEnum());
      msg.setOp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setVal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policies.NumberCheck.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policies.NumberCheck.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policies.NumberCheck} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.NumberCheck.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOp();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getVal();
  if (f !== 0) {
    writer.writeSint32(
      2,
      f
    );
  }
};


/**
 * optional NUM op = 1;
 * @return {!proto.policies.NUM}
 */
proto.policies.NumberCheck.prototype.getOp = function() {
  return /** @type {!proto.policies.NUM} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.policies.NUM} value
 * @return {!proto.policies.NumberCheck} returns this
 */
proto.policies.NumberCheck.prototype.setOp = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional sint32 val = 2;
 * @return {number}
 */
proto.policies.NumberCheck.prototype.getVal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.policies.NumberCheck} returns this
 */
proto.policies.NumberCheck.prototype.setVal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.policies.EntityCheck.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policies.EntityCheck.prototype.toObject = function(opt_includeInstance) {
  return proto.policies.EntityCheck.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policies.EntityCheck} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.EntityCheck.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && proto.policies.StringCheck.toObject(includeInstance, f),
    typestr: (f = msg.getTypestr()) && proto.policies.StringCheck.toObject(includeInstance, f),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.policies.KvCheck.toObject, includeInstance),
    bucket: (f = msg.getBucket()) && proto.policies.NumberCheck.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policies.EntityCheck}
 */
proto.policies.EntityCheck.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policies.EntityCheck;
  return proto.policies.EntityCheck.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policies.EntityCheck} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policies.EntityCheck}
 */
proto.policies.EntityCheck.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.policies.StringCheck;
      reader.readMessage(value,proto.policies.StringCheck.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 2:
      var value = new proto.policies.StringCheck;
      reader.readMessage(value,proto.policies.StringCheck.deserializeBinaryFromReader);
      msg.setTypestr(value);
      break;
    case 3:
      var value = new proto.policies.KvCheck;
      reader.readMessage(value,proto.policies.KvCheck.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    case 4:
      var value = new proto.policies.NumberCheck;
      reader.readMessage(value,proto.policies.NumberCheck.deserializeBinaryFromReader);
      msg.setBucket(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policies.EntityCheck.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policies.EntityCheck.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policies.EntityCheck} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.EntityCheck.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.policies.StringCheck.serializeBinaryToWriter
    );
  }
  f = message.getTypestr();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.policies.StringCheck.serializeBinaryToWriter
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.policies.KvCheck.serializeBinaryToWriter
    );
  }
  f = message.getBucket();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.policies.NumberCheck.serializeBinaryToWriter
    );
  }
};


/**
 * optional StringCheck name = 1;
 * @return {?proto.policies.StringCheck}
 */
proto.policies.EntityCheck.prototype.getName = function() {
  return /** @type{?proto.policies.StringCheck} */ (
    jspb.Message.getWrapperField(this, proto.policies.StringCheck, 1));
};


/**
 * @param {?proto.policies.StringCheck|undefined} value
 * @return {!proto.policies.EntityCheck} returns this
*/
proto.policies.EntityCheck.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policies.EntityCheck} returns this
 */
proto.policies.EntityCheck.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policies.EntityCheck.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StringCheck typestr = 2;
 * @return {?proto.policies.StringCheck}
 */
proto.policies.EntityCheck.prototype.getTypestr = function() {
  return /** @type{?proto.policies.StringCheck} */ (
    jspb.Message.getWrapperField(this, proto.policies.StringCheck, 2));
};


/**
 * @param {?proto.policies.StringCheck|undefined} value
 * @return {!proto.policies.EntityCheck} returns this
*/
proto.policies.EntityCheck.prototype.setTypestr = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policies.EntityCheck} returns this
 */
proto.policies.EntityCheck.prototype.clearTypestr = function() {
  return this.setTypestr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policies.EntityCheck.prototype.hasTypestr = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated KvCheck attributes = 3;
 * @return {!Array<!proto.policies.KvCheck>}
 */
proto.policies.EntityCheck.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.policies.KvCheck>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.policies.KvCheck, 3));
};


/**
 * @param {!Array<!proto.policies.KvCheck>} value
 * @return {!proto.policies.EntityCheck} returns this
*/
proto.policies.EntityCheck.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.policies.KvCheck=} opt_value
 * @param {number=} opt_index
 * @return {!proto.policies.KvCheck}
 */
proto.policies.EntityCheck.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.policies.KvCheck, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.policies.EntityCheck} returns this
 */
proto.policies.EntityCheck.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};


/**
 * optional NumberCheck bucket = 4;
 * @return {?proto.policies.NumberCheck}
 */
proto.policies.EntityCheck.prototype.getBucket = function() {
  return /** @type{?proto.policies.NumberCheck} */ (
    jspb.Message.getWrapperField(this, proto.policies.NumberCheck, 4));
};


/**
 * @param {?proto.policies.NumberCheck|undefined} value
 * @return {!proto.policies.EntityCheck} returns this
*/
proto.policies.EntityCheck.prototype.setBucket = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policies.EntityCheck} returns this
 */
proto.policies.EntityCheck.prototype.clearBucket = function() {
  return this.setBucket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policies.EntityCheck.prototype.hasBucket = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.policies.TargetCheck.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policies.TargetCheck.prototype.toObject = function(opt_includeInstance) {
  return proto.policies.TargetCheck.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policies.TargetCheck} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.TargetCheck.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && proto.policies.StringCheck.toObject(includeInstance, f),
    typestr: (f = msg.getTypestr()) && proto.policies.StringCheck.toObject(includeInstance, f),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.policies.KvCheck.toObject, includeInstance),
    matchInEntityList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    matchInEnvList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    action: (f = msg.getAction()) && proto.policies.StringCheck.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policies.TargetCheck}
 */
proto.policies.TargetCheck.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policies.TargetCheck;
  return proto.policies.TargetCheck.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policies.TargetCheck} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policies.TargetCheck}
 */
proto.policies.TargetCheck.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.policies.StringCheck;
      reader.readMessage(value,proto.policies.StringCheck.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 2:
      var value = new proto.policies.StringCheck;
      reader.readMessage(value,proto.policies.StringCheck.deserializeBinaryFromReader);
      msg.setTypestr(value);
      break;
    case 3:
      var value = new proto.policies.KvCheck;
      reader.readMessage(value,proto.policies.KvCheck.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addMatchInEntity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addMatchInEnv(value);
      break;
    case 6:
      var value = new proto.policies.StringCheck;
      reader.readMessage(value,proto.policies.StringCheck.deserializeBinaryFromReader);
      msg.setAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policies.TargetCheck.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policies.TargetCheck.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policies.TargetCheck} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.TargetCheck.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.policies.StringCheck.serializeBinaryToWriter
    );
  }
  f = message.getTypestr();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.policies.StringCheck.serializeBinaryToWriter
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.policies.KvCheck.serializeBinaryToWriter
    );
  }
  f = message.getMatchInEntityList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getMatchInEnvList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getAction();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.policies.StringCheck.serializeBinaryToWriter
    );
  }
};


/**
 * optional StringCheck name = 1;
 * @return {?proto.policies.StringCheck}
 */
proto.policies.TargetCheck.prototype.getName = function() {
  return /** @type{?proto.policies.StringCheck} */ (
    jspb.Message.getWrapperField(this, proto.policies.StringCheck, 1));
};


/**
 * @param {?proto.policies.StringCheck|undefined} value
 * @return {!proto.policies.TargetCheck} returns this
*/
proto.policies.TargetCheck.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policies.TargetCheck} returns this
 */
proto.policies.TargetCheck.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policies.TargetCheck.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StringCheck typestr = 2;
 * @return {?proto.policies.StringCheck}
 */
proto.policies.TargetCheck.prototype.getTypestr = function() {
  return /** @type{?proto.policies.StringCheck} */ (
    jspb.Message.getWrapperField(this, proto.policies.StringCheck, 2));
};


/**
 * @param {?proto.policies.StringCheck|undefined} value
 * @return {!proto.policies.TargetCheck} returns this
*/
proto.policies.TargetCheck.prototype.setTypestr = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policies.TargetCheck} returns this
 */
proto.policies.TargetCheck.prototype.clearTypestr = function() {
  return this.setTypestr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policies.TargetCheck.prototype.hasTypestr = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated KvCheck attributes = 3;
 * @return {!Array<!proto.policies.KvCheck>}
 */
proto.policies.TargetCheck.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.policies.KvCheck>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.policies.KvCheck, 3));
};


/**
 * @param {!Array<!proto.policies.KvCheck>} value
 * @return {!proto.policies.TargetCheck} returns this
*/
proto.policies.TargetCheck.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.policies.KvCheck=} opt_value
 * @param {number=} opt_index
 * @return {!proto.policies.KvCheck}
 */
proto.policies.TargetCheck.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.policies.KvCheck, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.policies.TargetCheck} returns this
 */
proto.policies.TargetCheck.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};


/**
 * repeated string match_in_entity = 4;
 * @return {!Array<string>}
 */
proto.policies.TargetCheck.prototype.getMatchInEntityList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.policies.TargetCheck} returns this
 */
proto.policies.TargetCheck.prototype.setMatchInEntityList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.policies.TargetCheck} returns this
 */
proto.policies.TargetCheck.prototype.addMatchInEntity = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.policies.TargetCheck} returns this
 */
proto.policies.TargetCheck.prototype.clearMatchInEntityList = function() {
  return this.setMatchInEntityList([]);
};


/**
 * repeated string match_in_env = 5;
 * @return {!Array<string>}
 */
proto.policies.TargetCheck.prototype.getMatchInEnvList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.policies.TargetCheck} returns this
 */
proto.policies.TargetCheck.prototype.setMatchInEnvList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.policies.TargetCheck} returns this
 */
proto.policies.TargetCheck.prototype.addMatchInEnv = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.policies.TargetCheck} returns this
 */
proto.policies.TargetCheck.prototype.clearMatchInEnvList = function() {
  return this.setMatchInEnvList([]);
};


/**
 * optional StringCheck action = 6;
 * @return {?proto.policies.StringCheck}
 */
proto.policies.TargetCheck.prototype.getAction = function() {
  return /** @type{?proto.policies.StringCheck} */ (
    jspb.Message.getWrapperField(this, proto.policies.StringCheck, 6));
};


/**
 * @param {?proto.policies.StringCheck|undefined} value
 * @return {!proto.policies.TargetCheck} returns this
*/
proto.policies.TargetCheck.prototype.setAction = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policies.TargetCheck} returns this
 */
proto.policies.TargetCheck.prototype.clearAction = function() {
  return this.setAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policies.TargetCheck.prototype.hasAction = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.policies.PolicyRule.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policies.PolicyRule.prototype.toObject = function(opt_includeInstance) {
  return proto.policies.PolicyRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policies.PolicyRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.PolicyRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    desc: jspb.Message.getFieldWithDefault(msg, 2, ""),
    entityCheck: (f = msg.getEntityCheck()) && proto.policies.EntityCheck.toObject(includeInstance, f),
    envAttributesList: jspb.Message.toObjectList(msg.getEnvAttributesList(),
    proto.policies.KvCheck.toObject, includeInstance),
    targetCheck: (f = msg.getTargetCheck()) && proto.policies.TargetCheck.toObject(includeInstance, f),
    decision: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policies.PolicyRule}
 */
proto.policies.PolicyRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policies.PolicyRule;
  return proto.policies.PolicyRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policies.PolicyRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policies.PolicyRule}
 */
proto.policies.PolicyRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesc(value);
      break;
    case 3:
      var value = new proto.policies.EntityCheck;
      reader.readMessage(value,proto.policies.EntityCheck.deserializeBinaryFromReader);
      msg.setEntityCheck(value);
      break;
    case 4:
      var value = new proto.policies.KvCheck;
      reader.readMessage(value,proto.policies.KvCheck.deserializeBinaryFromReader);
      msg.addEnvAttributes(value);
      break;
    case 5:
      var value = new proto.policies.TargetCheck;
      reader.readMessage(value,proto.policies.TargetCheck.deserializeBinaryFromReader);
      msg.setTargetCheck(value);
      break;
    case 6:
      var value = /** @type {!proto.policies.DECIDE} */ (reader.readEnum());
      msg.setDecision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policies.PolicyRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policies.PolicyRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policies.PolicyRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.PolicyRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEntityCheck();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.policies.EntityCheck.serializeBinaryToWriter
    );
  }
  f = message.getEnvAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.policies.KvCheck.serializeBinaryToWriter
    );
  }
  f = message.getTargetCheck();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.policies.TargetCheck.serializeBinaryToWriter
    );
  }
  f = message.getDecision();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.policies.PolicyRule.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.policies.PolicyRule} returns this
 */
proto.policies.PolicyRule.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string desc = 2;
 * @return {string}
 */
proto.policies.PolicyRule.prototype.getDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.policies.PolicyRule} returns this
 */
proto.policies.PolicyRule.prototype.setDesc = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.policies.PolicyRule} returns this
 */
proto.policies.PolicyRule.prototype.clearDesc = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policies.PolicyRule.prototype.hasDesc = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional EntityCheck entity_check = 3;
 * @return {?proto.policies.EntityCheck}
 */
proto.policies.PolicyRule.prototype.getEntityCheck = function() {
  return /** @type{?proto.policies.EntityCheck} */ (
    jspb.Message.getWrapperField(this, proto.policies.EntityCheck, 3));
};


/**
 * @param {?proto.policies.EntityCheck|undefined} value
 * @return {!proto.policies.PolicyRule} returns this
*/
proto.policies.PolicyRule.prototype.setEntityCheck = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policies.PolicyRule} returns this
 */
proto.policies.PolicyRule.prototype.clearEntityCheck = function() {
  return this.setEntityCheck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policies.PolicyRule.prototype.hasEntityCheck = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated KvCheck env_attributes = 4;
 * @return {!Array<!proto.policies.KvCheck>}
 */
proto.policies.PolicyRule.prototype.getEnvAttributesList = function() {
  return /** @type{!Array<!proto.policies.KvCheck>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.policies.KvCheck, 4));
};


/**
 * @param {!Array<!proto.policies.KvCheck>} value
 * @return {!proto.policies.PolicyRule} returns this
*/
proto.policies.PolicyRule.prototype.setEnvAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.policies.KvCheck=} opt_value
 * @param {number=} opt_index
 * @return {!proto.policies.KvCheck}
 */
proto.policies.PolicyRule.prototype.addEnvAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.policies.KvCheck, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.policies.PolicyRule} returns this
 */
proto.policies.PolicyRule.prototype.clearEnvAttributesList = function() {
  return this.setEnvAttributesList([]);
};


/**
 * optional TargetCheck target_check = 5;
 * @return {?proto.policies.TargetCheck}
 */
proto.policies.PolicyRule.prototype.getTargetCheck = function() {
  return /** @type{?proto.policies.TargetCheck} */ (
    jspb.Message.getWrapperField(this, proto.policies.TargetCheck, 5));
};


/**
 * @param {?proto.policies.TargetCheck|undefined} value
 * @return {!proto.policies.PolicyRule} returns this
*/
proto.policies.PolicyRule.prototype.setTargetCheck = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policies.PolicyRule} returns this
 */
proto.policies.PolicyRule.prototype.clearTargetCheck = function() {
  return this.setTargetCheck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policies.PolicyRule.prototype.hasTargetCheck = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DECIDE decision = 6;
 * @return {!proto.policies.DECIDE}
 */
proto.policies.PolicyRule.prototype.getDecision = function() {
  return /** @type {!proto.policies.DECIDE} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.policies.DECIDE} value
 * @return {!proto.policies.PolicyRule} returns this
 */
proto.policies.PolicyRule.prototype.setDecision = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policies.AddPolicyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.policies.AddPolicyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policies.AddPolicyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.AddPolicyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rule: (f = msg.getRule()) && proto.policies.PolicyRule.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policies.AddPolicyRequest}
 */
proto.policies.AddPolicyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policies.AddPolicyRequest;
  return proto.policies.AddPolicyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policies.AddPolicyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policies.AddPolicyRequest}
 */
proto.policies.AddPolicyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.policies.PolicyRule;
      reader.readMessage(value,proto.policies.PolicyRule.deserializeBinaryFromReader);
      msg.setRule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policies.AddPolicyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policies.AddPolicyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policies.AddPolicyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.AddPolicyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRule();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.policies.PolicyRule.serializeBinaryToWriter
    );
  }
};


/**
 * optional PolicyRule rule = 1;
 * @return {?proto.policies.PolicyRule}
 */
proto.policies.AddPolicyRequest.prototype.getRule = function() {
  return /** @type{?proto.policies.PolicyRule} */ (
    jspb.Message.getWrapperField(this, proto.policies.PolicyRule, 1));
};


/**
 * @param {?proto.policies.PolicyRule|undefined} value
 * @return {!proto.policies.AddPolicyRequest} returns this
*/
proto.policies.AddPolicyRequest.prototype.setRule = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policies.AddPolicyRequest} returns this
 */
proto.policies.AddPolicyRequest.prototype.clearRule = function() {
  return this.setRule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policies.AddPolicyRequest.prototype.hasRule = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policies.ModifyPolicyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.policies.ModifyPolicyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policies.ModifyPolicyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.ModifyPolicyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rule: (f = msg.getRule()) && proto.policies.PolicyRule.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policies.ModifyPolicyRequest}
 */
proto.policies.ModifyPolicyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policies.ModifyPolicyRequest;
  return proto.policies.ModifyPolicyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policies.ModifyPolicyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policies.ModifyPolicyRequest}
 */
proto.policies.ModifyPolicyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.policies.PolicyRule;
      reader.readMessage(value,proto.policies.PolicyRule.deserializeBinaryFromReader);
      msg.setRule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policies.ModifyPolicyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policies.ModifyPolicyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policies.ModifyPolicyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.ModifyPolicyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRule();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.policies.PolicyRule.serializeBinaryToWriter
    );
  }
};


/**
 * optional PolicyRule rule = 1;
 * @return {?proto.policies.PolicyRule}
 */
proto.policies.ModifyPolicyRequest.prototype.getRule = function() {
  return /** @type{?proto.policies.PolicyRule} */ (
    jspb.Message.getWrapperField(this, proto.policies.PolicyRule, 1));
};


/**
 * @param {?proto.policies.PolicyRule|undefined} value
 * @return {!proto.policies.ModifyPolicyRequest} returns this
*/
proto.policies.ModifyPolicyRequest.prototype.setRule = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policies.ModifyPolicyRequest} returns this
 */
proto.policies.ModifyPolicyRequest.prototype.clearRule = function() {
  return this.setRule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policies.ModifyPolicyRequest.prototype.hasRule = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policies.RemovePolicyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.policies.RemovePolicyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policies.RemovePolicyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.RemovePolicyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policies.RemovePolicyRequest}
 */
proto.policies.RemovePolicyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policies.RemovePolicyRequest;
  return proto.policies.RemovePolicyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policies.RemovePolicyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policies.RemovePolicyRequest}
 */
proto.policies.RemovePolicyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policies.RemovePolicyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policies.RemovePolicyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policies.RemovePolicyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.RemovePolicyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.policies.RemovePolicyRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.policies.RemovePolicyRequest} returns this
 */
proto.policies.RemovePolicyRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policies.GetPoliciesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.policies.GetPoliciesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policies.GetPoliciesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.GetPoliciesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policies.GetPoliciesRequest}
 */
proto.policies.GetPoliciesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policies.GetPoliciesRequest;
  return proto.policies.GetPoliciesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policies.GetPoliciesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policies.GetPoliciesRequest}
 */
proto.policies.GetPoliciesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policies.GetPoliciesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policies.GetPoliciesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policies.GetPoliciesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.GetPoliciesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.policies.GetPoliciesRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.policies.GetPoliciesRequest} returns this
 */
proto.policies.GetPoliciesRequest.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.policies.GetPoliciesRequest} returns this
 */
proto.policies.GetPoliciesRequest.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policies.GetPoliciesRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policies.PolicyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.policies.PolicyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policies.PolicyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.PolicyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rule: (f = msg.getRule()) && proto.policies.PolicyRule.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policies.PolicyResponse}
 */
proto.policies.PolicyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policies.PolicyResponse;
  return proto.policies.PolicyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policies.PolicyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policies.PolicyResponse}
 */
proto.policies.PolicyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.policies.PolicyRule;
      reader.readMessage(value,proto.policies.PolicyRule.deserializeBinaryFromReader);
      msg.setRule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policies.PolicyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policies.PolicyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policies.PolicyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.PolicyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRule();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.policies.PolicyRule.serializeBinaryToWriter
    );
  }
};


/**
 * optional PolicyRule rule = 1;
 * @return {?proto.policies.PolicyRule}
 */
proto.policies.PolicyResponse.prototype.getRule = function() {
  return /** @type{?proto.policies.PolicyRule} */ (
    jspb.Message.getWrapperField(this, proto.policies.PolicyRule, 1));
};


/**
 * @param {?proto.policies.PolicyRule|undefined} value
 * @return {!proto.policies.PolicyResponse} returns this
*/
proto.policies.PolicyResponse.prototype.setRule = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policies.PolicyResponse} returns this
 */
proto.policies.PolicyResponse.prototype.clearRule = function() {
  return this.setRule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policies.PolicyResponse.prototype.hasRule = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.policies.MultiPolicyResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policies.MultiPolicyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.policies.MultiPolicyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policies.MultiPolicyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.MultiPolicyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rulesList: jspb.Message.toObjectList(msg.getRulesList(),
    proto.policies.PolicyRule.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policies.MultiPolicyResponse}
 */
proto.policies.MultiPolicyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policies.MultiPolicyResponse;
  return proto.policies.MultiPolicyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policies.MultiPolicyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policies.MultiPolicyResponse}
 */
proto.policies.MultiPolicyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.policies.PolicyRule;
      reader.readMessage(value,proto.policies.PolicyRule.deserializeBinaryFromReader);
      msg.addRules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policies.MultiPolicyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policies.MultiPolicyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policies.MultiPolicyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policies.MultiPolicyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.policies.PolicyRule.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PolicyRule rules = 1;
 * @return {!Array<!proto.policies.PolicyRule>}
 */
proto.policies.MultiPolicyResponse.prototype.getRulesList = function() {
  return /** @type{!Array<!proto.policies.PolicyRule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.policies.PolicyRule, 1));
};


/**
 * @param {!Array<!proto.policies.PolicyRule>} value
 * @return {!proto.policies.MultiPolicyResponse} returns this
*/
proto.policies.MultiPolicyResponse.prototype.setRulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.policies.PolicyRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.policies.PolicyRule}
 */
proto.policies.MultiPolicyResponse.prototype.addRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.policies.PolicyRule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.policies.MultiPolicyResponse} returns this
 */
proto.policies.MultiPolicyResponse.prototype.clearRulesList = function() {
  return this.setRulesList([]);
};


/**
 * @enum {number}
 */
proto.policies.SET = {
  HAS: 0,
  HAS_NOT: 1
};

/**
 * @enum {number}
 */
proto.policies.NUM = {
  EQUALS: 0,
  LESS_THAN: 1,
  MORE_THAN: 2
};

/**
 * @enum {number}
 */
proto.policies.DECIDE = {
  DENY: 0,
  ALLOW: 1
};

goog.object.extend(exports, proto.policies);
